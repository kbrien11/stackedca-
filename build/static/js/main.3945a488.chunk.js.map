{"version":3,"sources":["components/Register.js","components/HomeName.js","components/NavBar.js","components/SearchMaxCity.js","components/SearchHappy.js","components/SearchReviews.js","components/SearchTopFiveCompanies.js","components/SearchTopFivePositions.js","components/HomeCity.js","components/Home.js","components/RegisterName.js","components/Questions.js","components/Login.js","components/About.js","components/LandingPageNavBar.js","components/LandingPage.js","components/SearchMaxSal.js","components/SearchHappyText.js","components/SearchData.js","components/ComanyReviews.js","components/RegisterJob.js","components/Positions.js","components/AddReview.js","components/Contact.js","components/BookingInfo.js","components/Booking.js","App.js","serviceWorker.js","index.js"],"names":["Register","useState","inputEmail","setInputEmail","inputPassword","setInputPassword","inputFirst_name","setFirstName","inputLast_name","setLastName","inputCompany","setInputCompany","inputPosition","setInputPosition","inputSalary","setSalary","inputCity","setCity","setToken","history","useHistory","sendData","a","data","email","password","first_name","last_name","company","position","salary","city","configs","method","mode","headers","body","JSON","stringify","fetch","response","json","res","console","log","sessionStorage","setItem","token","push","className","for","type","id","placeholder","onChange","e","target","value","onClick","link","href","as","RouterLink","HomeName","props","Navbar","SearchMaxCity","toLocaleString","SearchHappy","output","datas","stars","i","SearchReviews","SearchTopFiveCompanies","happy","setHappy","setOutput","getItem","reviews","setReviews","useEffect","happyCompanies","getImage","comp","sal","happyData","map","src","images","onError","onerror","width","color","otherImage","SearchTopPositions","HomeCity","Home","setData","name","setName","max","setMax","companies","setCompanies","setIsError","UserInfo","UserName","searchData","fiveCities","results","outputName","topFiveComp","getCity","length","RegisterName","Question","department","setDepartment","level","setLevel","years","setYears","endpoint","class","Login","isError","signin","About","NavbarTwo","Landing","height","SearchMaxSal","HappyText","SearchData","CompanyReviews","SearchTwo","countReviews","setCountReviews","positions","setPositions","avData","setAverageData","error","setError","avg","review","searchHappy","getReviews","getPositions","revs","fivePositions","maxSal","image","SearchPoss","topFivePositions","AddReview","message","setMessage","pros","setPros","setCompany","cons","setCons","sendMessage","time_stamp","now","moment","format","required","Contact","UserBooking","updateBooking","setUpdateBooking","bookingError","setBookingError","Date","startDate","setStartDate","updateReservation","date_stamp","toLocaleDateString","toLocaleTimeString","full_date","pk","cancel","selected","date","showTimeSelect","timeFormat","timeIntervals","minDate","timeCaption","locale","filterDate","getDay","Booking","booking","setBooking","totalBookings","setTotalBookings","setPk","dateBooked","getBooking","reservation","includes","bookings","result","placeholderText","App","exact","path","component","exaxt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"yMAoHeA,MA9Gf,WAAqB,IAAD,EACgBC,mBAAS,IADzB,mBACZC,EADY,KACDC,EADC,OAEsBF,mBAAS,IAF/B,mBAEZG,EAFY,KAEEC,EAFF,OAGoBJ,mBAAS,IAH7B,mBAGZK,EAHY,KAGIC,EAHJ,OAIkBN,mBAAS,IAJ3B,mBAIZO,EAJY,KAIGC,EAJH,OAKoBR,mBAAS,IAL7B,mBAKZS,EALY,KAKCC,EALD,OAMsBV,mBAAS,IAN/B,mBAMZW,EANY,KAMEC,EANF,OAOaZ,mBAAS,IAPtB,mBAOZa,EAPY,KAOAC,EAPA,OAQSd,mBAAS,IARlB,mBAQZe,EARY,KAQFC,EARE,OASQhB,oBAAS,GATjB,mBASJiB,GATI,WAcZC,EAASC,cAGTC,EAAQ,uCAAG,kCAAAC,EAAA,4DAEE,yCACXC,EAAO,CACXC,MAAMtB,EACNuB,SAASrB,EACTsB,WAAWpB,EACXqB,UAAUnB,EACVoB,QAAQlB,EACRmB,SAASjB,EACTkB,OAAOhB,EACPiB,KAAKf,GAEDgB,EAAU,CACdC,OAAQ,OACPC,KAAM,OACPC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,IAjBR,SAmBQgB,MAjBN,yCAiBsBP,GAnBxB,cAmBTQ,EAnBS,gBAoBGA,EAASC,OApBZ,OAoBTC,EApBS,OAqBfC,QAAQC,IAAIF,GACZG,eAAeC,QAAQ,QAASJ,EAAIK,OACnC7B,EAASwB,EAAIK,OACVL,GACAvB,EAAQ6B,KAAM,aAzBH,4CAAH,qDAiCd,OACI,yBAAKC,UAAY,iBACjB,yBAAKA,UAAY,uBAMnB,yBAAKA,UAAU,oBACb,yCACF,2BAAOC,IAAM,SAAb,eAFA,IAEyC,6BACzC,2BAAOC,KAAO,OAAOC,GAAK,QAAQC,YAAc,gBAAgBC,SAAU,SAAAC,GAAC,OAAIhD,EAAagD,EAAEC,OAAOC,UAAS,6BAE9G,2BAAOP,IAAM,QAAb,cALA,IAKuC,6BACvC,2BAAOC,KAAO,OAAOC,GAAK,OAAOC,YAAc,qBAAqBC,SAAU,SAAAC,GAAC,OAAI9C,EAAY8C,EAAEC,OAAOC,UANxG,IAMkH,6BAElH,2BAAOP,IAAM,SAAb,UARA,IAQoC,6BACpC,2BAAOC,KAAO,OAAOC,GAAK,QAAQC,YAAc,iBAAiBC,SAAU,SAAAC,GAAC,OAAIpD,EAAcoD,EAAEC,OAAOC,UATvG,IASiH,6BAEjH,2BAAOP,IAAM,QAAb,aAXA,IAWsC,6BACtC,2BAAOC,KAAO,WAAWC,GAAK,OAAOC,YAAc,oBAAoBC,SAAU,SAAAC,GAAC,OAAIlD,EAAiBkD,EAAEC,OAAOC,UAZhH,IAY0H,6BAE1H,2BAAOP,IAAM,QAAb,YAdA,IAcqC,6BACrC,2BAAOC,KAAO,OAAOC,GAAK,OAAOC,YAAc,mBAAmBC,SAAU,SAAAC,GAAC,OAAI5C,EAAgB4C,EAAEC,OAAOC,UAf1G,IAeoH,6BAEpH,2BAAOP,IAAM,OAAb,aAjBA,IAiBqC,6BACrC,2BAAOC,KAAO,OAAOC,GAAK,OAAOC,YAAc,oBAAoBC,SAAU,SAAAC,GAAC,OAAI1C,EAAiB0C,EAAEC,OAAOC,UAlB5G,IAkBsH,6BAiBtH,2BAAOP,IAAM,UAAb,WAnCA,IAmCsC,6BACtC,2BAAOC,KAAO,OAAOC,GAAK,OAAOC,YAAc,SAASC,SAAU,SAAAC,GAAC,OAAIxC,EAAUwC,EAAEC,OAAOC,UApC1F,IAoCoG,6BAEpG,2BAAOP,IAAM,QAAb,SAtCA,IAsCkC,6BAClC,2BAAOC,KAAO,OAAOC,GAAK,OAAOC,YAAc,WAAWC,SAAU,SAAAC,GAAC,OAAItC,EAAQsC,EAAEC,OAAOC,UAvC1F,IAuCoG,6BAEpG,4BAAQC,QAAW,SAAAH,GAAC,OAAElC,MAAtB,cAzCA,IAyCsD,6BAzCtD,sBA6CI,uBAAIsC,MAAI,EAACC,KAAO,QAAQC,GAAMC,KAA9B,mBC5FOC,EAdC,SAACC,GAEb,OACE,yBAAKf,UAAW,YAEhB,uDACA,gCAAOe,EAAMzC,KAAK,GAAK,OCkBV0C,EAvBJ,WACX,OAEI,yBAAKhB,UAAY,UAEhB,yBAAKA,UAAW,SAChB,6CAGL,uBAAKW,KAAM,QAAOC,GAAKC,KAAvB,WACA,uBAAKF,KAAM,aAAYC,GAAKC,KAA5B,gBACA,uBAAKF,KAAM,aAAYC,GAAKC,KAA5B,gBACA,gCAAK,uBAAIF,KAAM,WAAUC,GAAKC,KAAzB,cAIH,0BAAMb,UAAY,cACnB,uBAAIW,KAAM,IAAGC,GAAKC,KAAlB,eCAUI,EAnBM,SAACF,GAGlB,IAAMlC,EAASkC,EAAMzC,KAAK,GAI3B,OAHCoB,QAAQC,IAAId,EAAOqC,kBAKpB,yBAAKlB,UAAW,iBAEf,iFAAuDe,EAAMzC,KAAK,GAAlE,sCAAyGyC,EAAMzC,KAAK,GAApH,gBAAqI,IAAIO,EAAO,SCgBrIsC,EA1BI,SAACJ,GAOjB,IAJH,IAAMK,EAASL,EAAMM,MAAM,GAGlBC,EAAQ,GACLC,EAAG,EAAGA,EAAKH,EAASG,GAAK,EAC/BD,EAAMvB,KAAKqB,GAGd,OACC,yBAAKpB,UAAW,SAEhB,yBAAKA,UAAW,YACfsB,K,iBCEUE,EAjBM,SAACT,GAKnB,OAEA,yBAAKf,UAAW,iBAEf,+BAAKe,EAAMzC,KAAK,MCuILmD,EA3Ie,SAACV,GAAS,IAAD,EACX/D,mBAAS,IADE,mBAC7B0E,EAD6B,KACvBC,EADuB,OAEb3E,oBAAS,GAFI,gCAGPA,oBAAS,IAHF,gCAIbA,oBAAS,IAJI,gCAKbA,oBAAS,IALI,gCAMTA,oBAAS,IANA,mBAM7BoE,EAN6B,KAMtBQ,EANsB,OAOT5E,mBAAS4C,eAAeiC,QAAQ,UAPvB,mBAO5B/B,EAP4B,aAQP9C,mBAAS,KARF,mBAQ7B8E,EAR6B,KAQrBC,EARqB,KAUnCC,qBAAU,WAAOC,MAAkB,IACnCD,qBAAU,WAAOE,MAAY,IAE7B,IAAMD,EAAc,uCAAG,8BAAA5D,EAAA,+EAIQiB,MAAM,mCAAD,OAAoC6C,EAApC,YAA4CrC,IAJzD,cAITP,EAJS,gBAKGA,EAASC,OALZ,OAKTC,EALS,OAMXkC,EAASlC,EAAIiC,OACbK,EAAWtC,EAAIqC,SAPJ,kDAUfpC,QAAQC,IAAR,MAVe,0DAAH,qDA2CRwC,EAAOpB,EAAMzC,KAAK,GAExB8D,EADSrB,EAAMzC,KAAK,GACP4C,iBAQbmB,GALkBP,EAAQQ,KAAI,SAACf,GACjC,OAAO,kBAAC,EAAD,CAAejD,KAAOiD,OAIfG,EAAMY,KAAI,SAACf,GACzB,OAAO,kBAAC,EAAD,CAAaF,MAAQE,QAGzBW,EAAU,WACT,yBAAKK,IAAG,8BAAyBxB,EAAMzC,KAAK,GAApC,WACRsD,GAAU,GAGVA,GAAU,IAMXY,EAAS,yBAAKD,IAAG,8BAAyBxB,EAAMzC,KAAK,GAApC,SAAiDmE,QAAS,SAACnC,GAAKA,EAAEC,OAAOmC,QAAU,KAAMpC,EAAEC,OAAOgC,IAAI,4EAA6EI,MAAM,KAAKC,MAAO,UAGtNC,EAAa,yBAAKN,IAAK,6EAC7B7C,QAAQC,IAAIkD,GAEA9B,EAAMzC,KAAK,GAEbyC,EAAMzC,KAAK,GAExB,OACE,6BAEA,yBAAK0B,UAAW,qBAIb,yBAAKA,UAAY,YAKVoB,EAAQoB,EAAOK,GAK1B,gCAAM9B,EAAMzC,KAAK,IACjB,6CAAmB,IAAI8D,EAAI,OAE3B,4BAAKC,GAEL,uBAAI3B,MAAI,EAACC,KAAO,SAASC,GAAMC,KAA/B,oBCnGYiC,EApBW,SAAC/B,GAGvB,IAAMlC,EAASkC,EAAMzC,KAAK,GAI3B,OAHCoB,QAAQC,IAAId,EAAOqC,kBAKpB,yBAAKlB,UAAW,kBAEf,gCAAMe,EAAMzC,KAAK,GAAjB,IAAsByC,EAAMzC,KAAK,GAAjC,QAA0CyC,EAAMzC,KAAK,GAArD,8BAAoF,IAAIO,EAAO,OAC/F,+BCGWkE,EAdC,SAAChC,GAEb,OACE,yBAAKf,UAAW,YAEjB,gCAAMe,EAAMzC,KAAK,MC+JP0E,EA3JH,WAAO,IAAD,EAEQhG,mBAAS,IAFjB,mBAEHiG,GAFG,aAGQjG,mBAAS,IAHjB,mBAGRkG,EAHQ,KAGHC,EAHG,OAIMnG,mBAAS,IAJf,mBAIRoG,EAJQ,KAIJC,EAJI,OAMkBrG,mBAAS,IAN3B,mBAMRsG,EANQ,KAMEC,EANF,OAQQvG,mBAAS,IARjB,mBAQR8B,EARQ,KAQHd,EARG,OASkBhB,mBAAS,IAT3B,gCAUeA,oBAAS,IAVxB,mBAUCwG,GAVD,aAWYxG,mBAAS4C,eAAeiC,QAAQ,UAX5C,mBAWP/B,EAXO,UAcdkC,qBAAU,WAAOyB,MAAY,IAC7BzB,qBAAU,WAAO0B,MAAY,IAC7B1B,qBAAU,WAAO2B,MAAc,IAC/B3B,qBAAU,WAAO4B,MAAc,IAGjC,IAAMH,EAAQ,uCAAG,8BAAApF,EAAA,+EAIYiB,MAAM,gDAAD,OAAiDQ,IAJlE,cAILP,EAJK,gBAKOA,EAASC,OALhB,OAKLC,EALK,OAMPwD,EAAQxD,EAAIoE,SACZnE,QAAQC,IAAIF,EAAIoE,SAPT,kDASXnE,QAAQC,IAAR,MATW,0DAAH,qDAaJgE,EAAU,uCAAG,8BAAAtF,EAAA,sEAGfmF,GAAW,GAHI,SAIUlE,MAAM,4CAAD,OAA6CQ,IAJ5D,cAIPP,EAJO,gBAKKA,EAASC,OALd,QAKPC,EALO,QAMF2B,OACPiC,EAAO5D,EAAI2B,QAGPoC,GAAW,GAVN,kDAab9D,QAAQC,IAAR,MACA6D,GAAW,GAdE,0DAAH,qDAkBNI,EAAU,uCAAG,8BAAAvF,EAAA,sEAGfmF,GAAW,GAHI,SAIUlE,MAAM,qDAAD,OAAsDQ,IAJrE,cAIPP,EAJO,gBAKKA,EAASC,OALd,QAKPC,EALO,QAMF2B,OAEPmC,EAAa9D,EAAIoE,SAKbL,GAAW,GAbN,kDAgBb9D,QAAQC,IAAR,MACA6D,GAAW,GAjBE,0DAAH,qDAqBlBE,EAAQ,uCAAG,8BAAArF,EAAA,+EAIYiB,MAAM,kDAAD,OAAmDQ,IAJpE,cAILP,EAJK,gBAKOA,EAASC,OALhB,OAKLC,EALK,OAMP0D,EAAQ1D,EAAIoE,SACZ7F,EAAQyB,EAAIX,MACZY,QAAQC,IAAIF,EAAIoE,SART,kDAUXnE,QAAQC,IAAR,MAVW,0DAAH,qDA+BLmE,EAAaZ,EAAKZ,KAAI,SAACf,GAC3B,OAAO,kBAAC,EAAD,CAAUjD,KAAOiD,OAWnBwC,GARSX,EAAId,KAAI,SAACf,GACtB,OAAO,kBAAC,EAAD,CAAejD,KAAOiD,OAOX+B,EAAUhB,KAAI,SAACf,GACjC,OAAO,kBAAC,EAAD,CAAwBjD,KAAOiD,QAIlCyC,EAAUlF,EAAKwD,KAAI,SAACf,GACxB,OAAO,kBAAC,EAAD,CAAUjD,KAAOiD,OAS5B,OAFC7B,QAAQC,IAAIuD,GAGT,yBAAKlD,UAAY,QACb,kBAAC,EAAD,MACA8D,EAKA,yBAAK9D,UAAW,mBAChB,+DACEgE,EAEDA,EAAQC,OAAO,GAAK,6BACpBF,KC1IEG,EAdK,SAACnD,GAEjB,OACE,yBAAKf,UAAW,YAEhB,mCACA,gCAAOe,EAAMzC,KAAK,MCyHT6F,EA/HC,WAAK,IAAD,EAGkBnH,mBAAS,IAH3B,mBAGVoH,EAHU,KAGCC,EAHD,OAIQrH,mBAAS,IAJjB,mBAIVsH,EAJU,KAIJC,EAJI,OAKQvH,mBAAS,IALjB,mBAKVwH,EALU,KAKJC,EALI,OAMQzH,mBAAS,IANjB,mBAMV0E,EANU,KAMJC,EANI,OAOM3E,mBAAS,IAPf,mBAOVkG,EAPU,KAOLC,EAPK,OAQUnG,mBAAS4C,eAAeiC,QAAQ,UAR1C,mBAQT/B,EARS,UAWhBkC,qBAAU,WAAO0B,MAAY,IAE/B,IAAMxF,EAASC,cAGTC,EAAQ,uCAAG,kCAAAC,EAAA,6DAETqG,EAFS,6CAEwC5E,GACjDxB,EAAO,CACZ8F,WAAWA,EACXE,MAAMA,EACNE,MAAMA,EACN9C,MAAMA,GAED3C,EAAU,CACdC,OAAQ,OACPC,KAAM,OACPC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,IAbR,SAeQgB,MAAMoF,EAAU3F,GAfxB,cAeTQ,EAfS,gBAgBGA,EAASC,OAhBZ,cAiBXtB,EAAQ6B,KAAM,UAjBH,4CAAH,qDAoBV2D,EAAQ,uCAAG,8BAAArF,EAAA,+EAIciB,MAAM,wCAAD,OAAyCQ,IAJ5D,cAIHP,EAJG,gBAKSA,EAASC,OALlB,OAKHC,EALG,OAML0D,EAAQ1D,EAAIoE,SACZnE,QAAQC,IAAIF,EAAIoE,SAPX,kDASTnE,QAAQC,IAAR,MATS,0DAAH,qDAYRmE,EAAaZ,EAAKZ,KAAI,SAACf,GACzB,OAAO,kBAAC,EAAD,CAAcjD,KAAOiD,OAI7B,OADH7B,QAAQC,IAAIyE,GAEL,6BACI,yBAAKpE,UAAW,gBAChB,4BAAM8D,IAEb,yBAAK9D,UAAY,oBAGlB,yBAAKA,UAAW,aAChB,0GAGA,4BAAQ2E,MAAM,aACbtE,SAAU,SAAAC,GAAC,OAAI+D,EAAc/D,EAAEC,OAAOC,SACtC,sDACA,uDACA,oDACA,yDACA,+CACA,qDACA,qDAZD,IAaW,6BAEV,4BAAQmE,MAAM,aACdtE,SAAU,SAAAC,GAAC,OAAIiE,EAASjE,EAAEC,OAAOC,SAC7B,iDACJ,2CACA,2CACA,4CACA,mDACA,6CACA,mDACA,+CAxBD,IAyBW,6BAGV,4BAAQmE,MAAM,aACdtE,SAAU,SAAAC,GAAC,OAAImE,EAASnE,EAAEC,OAAOC,SAC7B,wDACJ,sCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,qCACA,uCACA,uCACA,wCA1CD,IA2CW,6BAGV,4BAAQmE,MAAM,aACdtE,SAAU,SAAAC,GAAC,OAAIqB,EAASrB,EAAEC,OAAOC,SAC7B,8CACJ,sCACA,sCACA,sCACA,qCACA,sCAKA,4BAAQC,QAAW,SAAAH,GAAC,OAAElC,MAAtB,cA1DD,IA0DuD,gCCnD3CwG,EAjED,WAAO,IAAD,EAEkB5H,mBAAS,IAF3B,mBAEVC,EAFU,KAECC,EAFD,OAGwBF,mBAAS,IAHjC,mBAGVG,EAHU,KAGIC,EAHJ,OAKaJ,oBAAS,GALtB,mBAKT6H,EALS,KAKDrB,EALC,OAMUxG,oBAAS,GANnB,mBAMT8C,EANS,KAMF7B,EANE,KAWVC,EAASC,cAEV2G,EAAM,uCAAG,kCAAAzG,EAAA,6DACXmF,GAAW,GACXvF,EAAS,IACK,4CACXK,EAAO,CACXC,MAAMtB,EACNuB,SAASrB,GAEL4B,EAAU,CACdC,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,IAZT,SAcSgB,MAXN,4CAWsBP,GAdzB,cAcRQ,EAdQ,iBAeIA,EAASC,OAfb,QAeRC,EAfQ,OAgBbC,QAAQC,IAAIF,EAAIK,OAChBF,eAAeC,QAAQ,QAASJ,EAAIK,OACpC7B,EAASwB,EAAIK,OACb0D,GAAW,GACP/D,EAAIK,OACR5B,EAAQ6B,KAAM,SArBD,4CAAH,qDAyBf,OACI,yBAAKC,UAAU,qBACnB,yBAAKA,UAAY,iBAEhBF,EAAO,kBAAC,EAAD,MAEH,yBAAKE,UAAW,SACZ,sCAGC6E,GAAW,8EAErB,2BAAO5E,IAAM,SAAb,UANK,IAM+B,6BAChC,2BAAOC,KAAO,OAAOC,GAAK,QAAQC,YAAc,YAAYC,SAAU,SAAAC,GAAC,OAAIpD,EAAcoD,EAAEC,OAAOC,UAPjG,IAO2G,6BAE5G,2BAAOP,IAAM,QAAb,aATC,IASqC,6BACtC,2BAAOC,KAAO,OAAOC,GAAK,OAAOC,YAAc,eAAeC,SAAU,SAAAC,GAAC,OAAIlD,EAAiBkD,EAAEC,OAAOC,UAVtG,IAUgH,6BACjH,8BAEA,4BAAQC,QAAW,SAAAH,GAAC,OAAEwE,MAAtB,WAbC,IAagD,6BAElD,yBAAKvC,IAAM,gLCvDCwC,EAPF,WACb,OACC,6BACD,4DCiBmBC,EAnBD,WACd,OAEI,yBAAKhF,UAAU,sBAIjB,4BACF,gCAAK,uBAAIW,KAAM,YAAWC,GAAKC,KAA1B,eACL,gCAAK,uBAAIF,KAAM,SAAQC,GAAKC,KAAvB,YACL,gCAAK,uBAAIF,KAAM,SAAQC,GAAKC,KAAvB,YACL,gCAAK,uBAAIF,KAAM,WAAUC,GAAKC,KAAzB,cACL,gCAAK,uBAAIF,KAAM,WAAUC,GAAKC,KAAzB,iBCgGMoE,MAvGf,WAKE,OACI,6BACI,kBAAC,EAAD,MACL,yBAAKjF,UAAU,WACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,oBACnB,gCAAK,0BAAMA,UAAU,eAAhB,YAAL,QAEA,wBAAIA,UAAU,eAAd,gFACA,uBAAGW,KAAM,QAAQC,GAAKC,KAAtB,mBAIA,6BAAUV,GAAG,gBAEd,yBAAKH,UAAU,aAGf,yBAAKA,UAAU,gBACf,4BAAI,0BAAMA,UAAU,eAAhB,OAAJ,cACC,6DACA,4EACA,mFAyBD,6BAASG,GAAG,gBACX,yBAAKH,UAAY,gBAEhB,uDAEG,yBAAK2E,MAAQ,eACd,2CACA,yBAAKpC,IAAI,yGAAqH2C,OAAO,QACrI,iDAAsB,0BAAMlF,UAAU,eAAhB,WAAtB,KACA,oIAEA,yBAAK2E,MAAQ,eACb,yCACA,yBAAKpC,IAAI,wFAAwF2C,OAAO,QACxG,8CAAmB,0BAAMlF,UAAU,eAAhB,eAAnB,KACA,+GAOJ,6BAASG,GAAG,YACV,yBAAKH,UAAW,OAEb,uCACA,kEAEH,yBAAKA,UAAW,aAEhB,0CACG,gEAEH,yBAAKA,UAAW,OAEhB,yCACG,6EAKL,yBAAKA,UAAU,aAChB,6BAASA,UAAU,UAClB,iECnFWmF,EAlBK,SAACpE,GAEjB,IACMlC,EADMkC,EAAMzC,KAAK,GACJ4C,iBAGpB,OAEA,yBAAKlB,UAAW,eAEf,gCAAMe,EAAMzC,KAAK,GAAjB,4BAA8CyC,EAAMzC,KAAK,GAAzD,yCAAmGyC,EAAMzC,KAAK,GAA9G,OAAsHyC,EAAMzC,KAAK,GAAjI,gBAAkJ,IAAIO,EAAO,MAA7J,eAAgLkC,EAAMzC,KAAK,GAA3L,OC6BW8G,EAvCE,SAACrE,GAGlB,IAAMK,EAASL,EAAMM,MAAM,GAC3B3B,QAAQC,IAAIyB,GAqBT,OAEA,yBAAKpB,UAAY,eAIhB,4BAzBOoB,EAAQ,IACJ,iDAECA,GAAS,GAAKA,EAAO,IACnB,4CAEFA,GAAS,GAAKA,EAAO,EACtB,uDAEFA,GAAS,GAAKA,EAAQ,EACpB,8CAGA,oDCSAiE,EA5BG,SAACtE,GAEf,IAAMlC,EAASkC,EAAMzC,KAAK,GACpB8D,EAAMvD,EAAOqC,iBAEvB,OADIxB,QAAQC,IAAId,EAAOqC,kBAGlB,yBAAKlB,UAAY,OAClB,yBAAKA,UAAU,UAGf,4BAAKe,EAAMzC,KAAK,IAChB,4BAAK,IAAI8D,EAAI,OACb,4BAAKrB,EAAMzC,KAAK,GAAhB,IAAoB,gCAAMyC,EAAMzC,KAAK,GAAjB,SCgBTgH,EA5BO,SAACvE,GAEnB,IAAMe,EAAUf,EAAMzC,KAAK,GAE7B,OACD,yBAAK0B,UAAW,cACf,yBAAKA,UAAY,gBAGnB,4BAAKe,EAAMzC,KAAK,IAChB,gCAAMwD,EAAN,KACA,yBAAK9B,UAAW,QACZ,qCACJ,4BAAKe,EAAMzC,KAAK,KAEhB,yBAAK0B,UAAW,QAChB,qCAEA,4BAAKe,EAAMzC,KAAK,QCoODiH,EA1OE,WAAO,IAAD,EAEmBvI,mBAAS,IAF5B,mBAEbS,EAFa,KAEAC,EAFA,OAGGV,mBAAS,IAHZ,mBAGbsB,EAHa,KAGR2E,EAHQ,OAIKjG,mBAAS,IAJd,mBAIb0E,EAJa,KAIPC,EAJO,OAKC3E,mBAAS,IALV,mBAKboG,EALa,KAKTC,EALS,OAMSrG,mBAAS,IANlB,mBAMb8E,EANa,KAMLC,EANK,OAOmB/E,mBAAS,IAP5B,mBAObwI,EAPa,KAOAC,EAPA,OAQazI,mBAAS,IARtB,mBAQb0I,EARa,KAQHC,EARG,OAYY3I,mBAAS,IAZrB,mBAYb4I,EAZa,KAYNC,EAZM,OAaM7I,oBAAS,GAbf,mBAaZ8I,EAbY,KAaNC,EAbM,OAcO/I,mBAAS4C,eAAeiC,QAAQ,UAdvC,mBAcZ/B,EAdY,KAgBb6D,GAhBa,KAgBH,uCAAG,8BAAAtF,EAAA,+EAIYiB,MAAM,+CAAD,OAAgD7B,EAAhD,YAAgEqC,IAJjF,cAILP,EAJK,gBAKOA,EAASC,OALhB,QAKLC,EALK,QAMA2B,OAAO6C,OAAO,GACrBhB,EAAQxD,EAAInB,MACZuH,EAAepG,EAAIuG,KACnB3C,EAAO5D,EAAI2D,KACX2C,GAAS,GACTN,EAAgBhG,EAAIwG,QACpBC,MAKIH,GAAS,GACT9C,EAAQ,KAlBL,kDAoBXvD,QAAQC,IAAR,MACAoG,GAAS,GArBE,0DAAH,sDAyBJG,EAAW,uCAAG,8BAAA7H,EAAA,+EAISiB,MAAM,6CAAD,OAA8C7B,EAA9C,YAA8DqC,IAJ5E,cAIRP,EAJQ,gBAKIA,EAASC,OALb,OAKRC,EALQ,OAMVkC,EAASlC,EAAIiC,OACZhC,QAAQC,IAAIF,EAAIiC,OAPP,kDAWdhC,QAAQC,IAAR,MAXc,0DAAH,qDAgBPwG,EAAU,uCAAG,8BAAA9H,EAAA,+EAIUiB,MAAM,uDAAD,OAAwD7B,EAAxD,YAAwEqC,IAJvF,cAIPP,EAJO,gBAKKA,EAASC,OALd,OAKPC,EALO,OAMTsC,EAAWtC,EAAIqC,SACdpC,QAAQC,IAAIF,EAAIiC,OAChBiE,EAAa,IARL,kDAWbjG,QAAQC,IAAR,MAXa,0DAAH,qDAgBNyG,EAAY,uCAAG,8BAAA/H,EAAA,+EAIQiB,MAAM,iDAAD,OAAkD7B,EAAlD,YAAkEqC,IAJ/E,cAITP,EAJS,gBAKGA,EAASC,OALZ,OAKTC,EALS,OAMXkG,EAAalG,EAAIiG,WAChB3D,EAAW,IAPD,kDAYfrC,QAAQC,IAAR,MAZe,0DAAH,qDAoCpByB,EAAS9C,EAAKgE,KAAI,SAACf,GACvB,OAAO,kBAAC,EAAD,CAAYjD,KAAQiD,OAGvB8E,GAAOvE,EAAQQ,KAAI,SAACf,GACxB,OAAO,kBAAC,EAAD,CAAgBjD,KAAQiD,OAG3B+E,GAAgBZ,EAAUpD,KAAI,SAACf,GACnC,OAAO,kBAAC,EAAD,CAAYjD,KAAQiD,OAUzBgF,GAASnD,EAAId,KAAI,SAACf,GACpB,OAAO,kBAAC,EAAD,CAAcjD,KAAMiD,OAEzBc,GAAYX,EAAMY,KAAI,SAACf,GACzB,OAAO,kBAAC,EAAD,CAAWF,MAAQE,OAGtBa,GAAMwD,EAAO1E,iBAEnBxB,QAAQC,IAAI4G,IASlB,IAAMC,GAAQ,yBAAKjE,IAAG,8BAAyB9E,EAAzB,SAAgDgF,QAAS,SAACnC,GAAKA,EAAEC,OAAOmC,QAAU,KAAMpC,EAAEC,OAAOgC,IAAI,4EAA6EI,MAAM,MAAMC,MAAO,UAI3N,OAFIlD,QAAQC,IAAImG,GAGZ,yBAAK9F,UAAW,iBAClB,kBAAC,EAAD,MACF,iEACA,6BAAM8F,GAAQ,2EAEd,2BAAO5F,KAAO,OAAOC,GAAK,SAASC,YAAc,UAAUC,SAAU,SAAAC,GAAC,OAAI5C,EAAgB4C,EAAEC,OAAOC,UAL/F,IAKyG,6BAC3G,4BAAQC,QAAW,SAAAH,GAAC,OAAEqD,MAAtB,WANE,IAMqD,6BAEvD,yBAAK3D,UAAY,uBACfoB,EAAO6C,OAAQ,GAAK,4BAAKuB,GACzBpE,EAAO6C,OAAS,GAAK,4BAAQxD,QAAW,SAAAH,GAAC,OAAE6F,MAAtB,cAErB,yBAAKnG,UAAW,kBACfoB,EAAO6C,OAAO,GAAK,4BAAK7C,EAAO6C,QAChC7C,EAAO6C,OAAS,GAAK,4BAAQxD,QAAW,SAAAH,GAAC,OAAE8F,MAAtB,gBAEtBhF,EAAO6C,OAAQ,GAAI,yBAAKjE,UAAY,cAClC,4BAAKwG,IACPpF,EAAO6C,OAAQ,GAAK,4BAAKxG,GAC3B,yBAAKuC,UAAU,iBACdoB,EAAO6C,OAAQ,GAAI,oDAA0B,IAAI7B,GAAI,QAGtDhB,EAAO6C,OAAS,GAAK,4BAAK5B,IACxBjB,EAAO6C,OAAQ,GAAKsC,IAuBjBnF,EAAO6C,OAAQ,GAAK,6BA2BvBoC,GAAKpC,OAAQ,GAAI,4BAAKoC,IAItBC,GAAcrC,OAAQ,GAAK,4BAAK7C,KCpKxBqF,EA7EG,WAAK,IAAD,EAEczJ,mBAAS,IAFvB,mBAEZ0I,EAFY,KAEFC,EAFE,OAGsB3I,mBAAS,IAH/B,mBAGEY,GAHF,aAIOZ,oBAAS,GAJhB,mBAIX8I,EAJW,KAILC,EAJK,OAKQ/I,mBAAS4C,eAAeiC,QAAQ,UALxC,mBAKX/B,EALW,UAQlBkC,qBAAU,WAAOoE,MAAgB,IAEjC,IAAMA,EAAY,uCAAG,8BAAA/H,EAAA,sEAGf0H,GAAS,GAHM,SAIUzG,MAAM,2CAAD,OAA4CQ,IAJ3D,cAIPP,EAJO,gBAKKA,EAASC,OALd,QAKPC,EALO,QAMFiG,UAEPC,EAAalG,EAAIiG,WAGbK,GAAS,GAXJ,kDAcbrG,QAAQC,IAAR,MACAoG,GAAS,GAfI,0DAAH,qDAmBNW,EAAmBhB,EAAUpD,KAAI,SAACf,GACtC,OAAO,kBAAC,EAAD,CAAoBjD,KAAOiD,OAG9BoC,EAAU,uCAAG,sBAAAtF,EAAA,0FAAH,qDAwBvB,OAEA,6BACF,kBAAC,EAAD,MACD,iEACI,6BAAMyH,GAAQ,2EAEd,2BAAO5F,KAAO,OAAOC,GAAK,SAASC,YAAc,UAAUC,SAAU,SAAAC,GAAC,OAAI1C,EAAiB0C,EAAEC,OAAOC,UALrG,IAK+G,6BAC5G,4BAAQC,QAAW,SAAAH,GAAC,OAAEqD,MAAtB,WANH,IAM0D,6BAEtD,yBAAK3D,UAAW,mBACX,4DACC0G,KCFEC,EAlEE,WAAO,IAAD,EAES3J,oBAAS,GAFlB,mBAEb4J,EAFa,KAELC,EAFK,OAGG7J,oBAAS,GAHZ,mBAGb8J,EAHa,KAGRC,EAHQ,OAIS/J,mBAAS,IAJlB,mBAIb2B,EAJa,KAILqI,EAJK,OAKGhK,oBAAS,GALZ,mBAKbiK,EALa,KAKRC,EALQ,OAMOlK,mBAAS4C,eAAeiC,QAAQ,UANvC,mBAMZ/B,EANY,KAQbqH,GARa,KAQF,uCAAG,WAAMpG,GAAN,uBAAA1C,EAAA,6DACVqG,EADU,+CACyC5E,EADzC,YACkDnB,GAC5DL,EAAO,CAEV2H,OAAOW,EACPQ,WAAWC,EACXP,KAAKA,EACLG,KAAKA,GAEFlI,EAAU,CACdC,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,IAbP,SAeOgB,MAAMoF,EAAU3F,GAfvB,cAeVQ,EAfU,gBAgBEA,EAASC,OAhBX,OAgBVC,EAhBU,OAkBhBC,QAAQC,IAAIF,GACZC,QAAQC,IAAIP,KAAKC,UAAU0B,IAnBX,4CAAH,uDAsBXsG,EAAMC,MAASC,OAAO,uBAG5B,OACI,6BACI,kBAAC,EAAD,MACR,yBAAKvH,UAAY,eAQrB,yBAAKA,UAAY,iBACf,iDACF,2BAAOC,IAAI,OAAM,oCACb,2BAAOI,SAAU,SAAAC,GAAC,OAAI0G,EAAW1G,EAAEC,OAAOC,QAAQJ,YAAY,YAAY8C,KAAK,MAAMsE,UAAQ,IAHjG,IAG2G,6BACzG,2BAAOvH,IAAI,OAAM,oCACf,2BAAOI,SAAU,SAAAC,GAAC,OAAIuG,EAAWvG,EAAEC,OAAOC,QAAQJ,YAAY,WAAW8C,KAAK,MAAMsE,UAAQ,IALhG,IAK0G,6BACtG,2BAAOvH,IAAI,OAAM,oCACjB,2BAAOI,SAAU,SAAAC,GAAC,OAAIyG,EAAQzG,EAAEC,OAAOC,QAAQJ,YAAY,SAAS8C,KAAK,MAAMsE,UAAQ,IAAS,6BAEhG,2BAAOvH,IAAI,OAAM,oCACjB,2BAAOI,SAAU,SAAAC,GAAC,OAAI4G,EAAQ5G,EAAEC,OAAOC,QAAQJ,YAAY,SAAS8C,KAAK,MAAMsE,UAAQ,IAAS,6BAC/F,4BAAQ7C,MAAM,MAAOlE,QAAW,SAAAH,GAAC,OAAG6G,MAApC,aAGD,6BAASnH,UAAW,0BCrDTyH,EAPA,WACf,OACC,6BACD,8D,iBC2FeC,G,MA1FI,SAAC3G,GAAW,IAAD,EACe/D,oBAAS,GADxB,mBACpB2K,EADoB,KACLC,EADK,OAEa5K,oBAAS,GAFtB,mBAEnB6K,EAFmB,KAENC,EAFM,OAGQ9K,mBAAS,IAAI+K,KAAO,IAH5B,mBAGnBC,EAHmB,KAGRC,EAHQ,OAKAjL,mBAAS4C,eAAeiC,QAAQ,UALhC,mBAKnB/B,EALmB,KAWpBoI,GAXoB,KAWH,uCAAG,kCAAA7J,EAAA,6DAChBqG,EADgB,mDACuC5E,EADvC,YACgDuB,GAChE/C,EAAO,CACV6J,WAAWH,EAAUI,qBACrBhB,WAAWY,EAAUK,qBACrBC,UAAUN,EACVO,GAAGlH,GAEAtC,EAAU,CACdC,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,IAZD,SAcCgB,MAAMoF,EAAU3F,GAdjB,cAchBQ,EAdgB,gBAeJA,EAASC,OAfL,cAgBtBE,QAAQC,MACRmI,GAAgB,GAjBM,4CAAH,sDAuBjBU,EAAM,uCAAG,WAAMzH,GAAN,uBAAA1C,EAAA,6DACLqG,EADK,mDACkD5E,GACvDxB,EAAO,CACViK,GAAGlH,GAEAtC,EAAU,CACdC,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,IATZ,SAWYgB,MAAMoF,EAAU3F,GAX5B,cAWLQ,EAXK,gBAYOA,EAASC,OAZhB,OAYLC,EAZK,OAcXC,QAAQC,IAAIF,GACZC,QAAQC,IAAIP,KAAKC,UAAU0B,IAfhB,4CAAH,sDAkBJM,EAAQN,EAAMzC,KAAK,GAI7B,OAFCoB,QAAQC,IAAI0B,GAGd,6BACKsG,GAAiB,kBAAC,IAAD,CAEtBc,SAAUT,EACV3H,SAAU,SAAAqI,GAAI,OAAIT,EAAaS,IAC/BC,eAAiB,WACjBC,WAAW,IACXC,cAAe,GACfC,QAAU,IAAIf,KACdgB,YAAY,OACZC,OAAO,QACPC,WAAY,SAAAP,GAAI,OAAmB,GAAhBA,EAAKQ,UAAiC,GAAjBR,EAAKQ,YAEvCvB,GAAgB,4BAAQxH,GAAG,cAAcM,QAAU,SAAAH,GAAC,OAAI4H,MAAxC,YAEtB,+DAAqCnH,EAAMzC,KAAK,IAfhD,IAeyD,6BAEzD,4BAAKyC,EAAMzC,KAAK,GAAhB,IAAoB,8BAAOyC,EAAMzC,KAAK,KACtC,4BAAK+C,GACL,6BACA,6BACA,4BAAQlB,GAAG,aAAaM,QAAU,SAAAH,GAAC,OAAIkI,MAAvC,WACA,4BAAQrI,GAAG,aAAaM,QAAU,SAAAH,GAvE3BsH,GAAiB,KAuExB,WAEA,yBAAK5H,UAAY,UAEb6H,GAAgB,wDAGrB,gCCkBesB,EAxGA,WAAO,IAAD,EACiBnM,mBAAS,IAD1B,mBACVgL,EADU,KACCC,EADD,OAESjL,mBAAS4C,eAAeiC,QAAQ,UAFzC,mBAEV/B,EAFU,aAGY9C,mBAAS,KAHrB,mBAGVoM,EAHU,KAGFC,EAHE,OAIwBrM,mBAAS,IAJjC,mBAIVsM,EAJU,KAIIC,EAJJ,OAKQvM,oBAAS,GALjB,mBAKV8I,EALU,KAKJC,EALI,OAMC/I,mBAAS,IANV,mBAMXuL,EANW,KAMRiB,EANQ,OAOsBxM,oBAAS,GAP/B,mBAOV6K,EAPU,KAOGC,EAPH,OAQgB9K,oBAAS,GARzB,mBAQXyM,EARW,UAUhBzH,qBAAU,WAAO0H,MAAc,IAGhC,IAAMC,EAAW,uCAAG,kCAAAtL,EAAA,6DACVqG,EADU,4CACsC5E,GAChDxB,EAAO,CACV6J,WAAWH,EAAUI,qBACrBhB,WAAWY,EAAUK,qBACrBC,UAAUN,EACVO,GAAGA,GAEAxJ,EAAU,CACdC,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,IAZP,SAcOgB,MAAMoF,EAAU3F,GAdvB,cAcVQ,EAdU,gBAeEA,EAASC,OAfX,cAgBb8J,EAAcM,SAAS5B,IAIlBtI,QAAQC,IAAI8J,GAHhB3B,GAAgB,GAjBJ,4CAAH,qDA0BT4B,EAAU,uCAAG,8BAAArL,EAAA,+EAIUiB,MAAM,yCAAD,OAA0CQ,IAJzD,cAIPP,EAJO,gBAKKA,EAASC,OALd,QAKPC,EALO,QAMFoK,UACHR,EAAW5J,EAAIoK,UACfN,EAAiB9J,EAAIoE,SACrB2F,EAAM/J,EAAI8I,KAGVxC,GAAS,GAZJ,kDAgBbrG,QAAQC,IAAR,MAhBa,0DAAH,qDAqBNyB,EAASgI,EAAQ9G,KAAI,SAACf,GAC1B,OAAO,kBAAC,EAAD,CAAajD,KAAQiD,OAGxBuI,EAASR,EAAchH,KAAI,SAACf,GAC9B,OAAOA,KAQrB,OAJU7B,QAAQC,IAAImK,GAKtB,6BACA,yBAAK3J,GAAK,YAAY,kBAAC,IAAD,CAEbsI,SAAUT,EACV3H,SAAU,SAAAqI,GAAI,OAAIT,EAAaS,IAC/BC,eAAiB,WACjBC,WAAW,IACXmB,gBAAgB,mBAChBlB,cAAe,GACfC,QAAU,IAAIf,KACdgB,YAAY,OACZC,OAAO,QACPC,WAAY,SAAAP,GAAI,OAAmB,GAAhBA,EAAKQ,UAAiC,GAAjBR,EAAKQ,aAMtD,4BAAQ/I,GAAG,cAAcM,QAAU,SAAAH,GAAC,OAAIqJ,MAAxC,YACA,yBAAK3J,UAAY,UACZ8F,GAAS,gDACT+B,GAAgB,sDAChB4B,GAAc,yDAEnB,6BACKrI,KC/DU4I,MA5Bf,WAME,OAEE,kBAAC,IAAD,KACA,yBAAKhK,UAAU,OAEb,kBAAC,IAAD,CAAOiK,OAAK,EAACC,KAAO,IAAIC,UAAYlF,IACpC,kBAAC,IAAD,CAAOgF,OAAK,EAACC,KAAO,QAAQC,UAAYnH,IACxC,kBAAC,IAAD,CAAOiH,OAAK,EAACC,KAAO,SAASC,UAAYvF,IACzC,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAO,aAAaC,UAAY5E,IAC7C,kBAAC,IAAD,CAAO6E,OAAK,EAACF,KAAO,YAAYC,UAAWpN,IAC3C,kBAAC,IAAD,CAAOqN,OAAK,EAACF,KAAO,YAAYC,UAAWhG,IAC3C,kBAAC,IAAD,CAAOiG,OAAK,EAACF,KAAO,aAAaC,UAAW1D,IAC5C,kBAAC,IAAD,CAAO2D,OAAK,EAACF,KAAO,UAAUC,UAAWxD,IACzC,kBAAC,IAAD,CAAOyD,OAAK,EAACF,KAAO,SAASC,UAAWpF,IACxC,kBAAC,IAAD,CAAOqF,OAAK,EAACF,KAAO,WAAWC,UAAW1C,IAC1C,kBAAC,IAAD,CAAO2C,OAAK,EAACF,KAAO,WAAWC,UAAWhB,OCxB5BkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvF,GACLpG,QAAQoG,MAAMA,EAAMc,a","file":"static/js/main.3945a488.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { Link as RouterLink} from 'react-router-dom';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Register() {\r\n  const[inputEmail,setInputEmail] = useState('')\r\n  const[inputPassword,setInputPassword] = useState('')\r\n  const[inputFirst_name,setFirstName] = useState('')\r\n  const[inputLast_name,setLastName] = useState('')\r\n  const[inputCompany,setInputCompany] = useState('')\r\n  const[inputPosition,setInputPosition] = useState('')\r\n  const[inputSalary,setSalary] = useState('')\r\n  const[inputCity,setCity] = useState('')\r\n  const [token, setToken] = useState(false)\r\n\r\n\r\n  \r\n\r\n  const history =useHistory()\r\n\r\n\r\n  const sendData = async() => {\r\n\r\n    const endpoint = \"kbrien11.pythonanywhere.com/api/create\";\r\n    const data = {\r\n      email:inputEmail,\r\n      password:inputPassword,\r\n      first_name:inputFirst_name,\r\n      last_name:inputLast_name,\r\n      company:inputCompany,\r\n      position:inputPosition,\r\n      salary:inputSalary,\r\n      city:inputCity,\r\n    };\r\n    const configs = {\r\n      method: \"POST\",\r\n       mode: \"cors\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(data)\r\n    }\r\n    const response = await fetch(endpoint, configs);\r\n    const res = await response.json();\r\n    console.log(res)\r\n    sessionStorage.setItem(\"token\", res.token)\r\n     setToken(res.token)\r\n    if (res){\r\n        history.push ('/question')\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n      <div className = 'registerimage'>\r\n      <div className = 'App-main_container'>\r\n        </div>\r\n          {/* <div className='row'>\r\n        <div className=\"App-main\">\r\n              <img src=\"https://media1.s-nbcnews.com/i/newscms/2018_30/2505991/180723-open-ofice-space-dk-928_21c81d16103938952551ae5674fa8bb9.jpg\" />\r\n          </div> */}\r\n    <div className=\"app-main_wrapper\">\r\n      <h3> Register</h3>\r\n    <label for = 'first'> First Name</label> <br/>\r\n    <input type = 'text' id = 'first' placeholder = ' Your name ..' onChange={e => setFirstName(e.target.value)}/><br/>\r\n    \r\n    <label for = 'last'> Last Name</label> <br/>\r\n    <input type = 'text' id = 'last' placeholder = ' Your Last name ..' onChange={e => setLastName(e.target.value)}/> <br/>\r\n   \r\n    <label for = 'email'> Email</label> <br/>\r\n    <input type = 'text' id = 'email' placeholder = ' Your Email ..' onChange={e => setInputEmail(e.target.value)}/> <br/>\r\n\r\n    <label for = 'pass'> Password</label> <br/>\r\n    <input type = 'password' id = 'pass' placeholder = ' Your Password ..' onChange={e => setInputPassword(e.target.value)}/> <br/>\r\n    \r\n    <label for = 'comp'> Company</label> <br/>\r\n    <input type = 'text' id = 'pass' placeholder = ' Your Company ..' onChange={e => setInputCompany(e.target.value)}/> <br/>\r\n    \r\n    <label for = 'pos'> Position</label> <br/>\r\n    <input type = 'text' id = 'pass' placeholder = ' Your Position ..' onChange={e => setInputPosition(e.target.value)}/> <br/>\r\n    {/* <select\r\n    onChange={setDepartment }>\r\n    <option> Select Department</option>\r\n    <option> Finance/Accpunting</option>\r\n    <option> Sales/Marketing</option>\r\n    <option> Coporate Development</option>\r\n    <option> Technology</option>\r\n    <option> Customer Support</option>\r\n    <option> Human Resources</option>\r\n    </select> */}\r\n    {/* <label for = 'dep'> Department</label> <br/>\r\n    <input type = 'text' id = 'pass' placeholder = ' Your Department ..' onChange={e => setSalary(e.target.value)}/> <br/>\r\n     */}\r\n    {/* <label for = 'level'> Level</label> <br/>\r\n    <input type = 'text' id = 'pass' placeholder = ' Your Level ..' onChange={e => setSalary(e.target.value)}/> <br/>\r\n    */}\r\n    <label for = 'salary'> Salary</label> <br/>\r\n    <input type = 'text' id = 'pass' placeholder = ' $0.00' onChange={e => setSalary(e.target.value)}/> <br/>\r\n   \r\n    <label for = 'city'> City</label> <br/>\r\n    <input type = 'text' id = 'pass' placeholder = ' City ..' onChange={e => setCity(e.target.value)}/> <br/>\r\n    \r\n    <button onClick = {e=>sendData()}>  Register</button> <br/>\r\n\r\n     Already Registered?\r\n    \r\n        < a link href = 'login' as = {RouterLink}> Log in Here</a>\r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\nconst HomeName =(props) => {\r\n\r\n    return(\r\n      <div className ='homeName'>\r\n      \r\n      <h3> Welcome to StackedCash</h3>\r\n      <h3> { props.data[0] + ','}</h3>\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default HomeName;","import React from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n       \r\n        <div className = 'navbar'>\r\n    \r\n         <div className =\"links\">\r\n         <h3> StackedCash</h3>\r\n    \r\n         </div>\r\n    <a   href= '/home'as ={RouterLink}> Home  </a>\r\n    <a   href= '/companies'as ={RouterLink}> Companies  </a>\r\n    <a   href= '/positions'as ={RouterLink}> Positions  </a>\r\n    <li> <a  href= '/booking'as ={RouterLink}> Booking </a></li>\r\n\r\n    \r\n    \r\n      <span className = \"logoutlink\"> \r\n     <a  href= '/'as ={RouterLink}> Logout </a>\r\n      </span> \r\n      \r\n    </div>\r\n    )\r\n    }\r\n    export default Navbar","import React from 'react'\r\n\r\nconst SearchMaxCity =(props)=>{\r\n\r\n\r\n    const salary = props.data[3]\r\n    console.log(salary.toLocaleString())\r\n   \r\n\r\n   return(\r\n    \r\n   <div className ='Searchmaxcity'>\r\n       \r\n    <p> The City that has the highest average salaries is {props.data[2]}. The highest paying job is labled {props.data[0]} which makes {'$'+salary+'.00'}</p>\r\n    \r\n    \r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default SearchMaxCity;","import React from 'react'\r\n// import {FaSmile} from 'react-icons/fa'\r\n\r\nconst SearchHappy =(props)=>{\r\n\r\n\r\nconst output = props.datas[0]\r\n\r\n\r\n   const stars = []\r\n   for (let i =0; i < (output); i += 1) {\r\n      stars.push(output)\r\n   }\r\n\r\n   return(\r\n    <div className ='stars'>\r\n       \r\n    <div className ='substars'>\r\n    {stars}\r\n       </div>\r\n   \r\n    \r\n    \r\n    \r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default SearchHappy;","import React from 'react'\r\n\r\n\r\nconst SearchReviews =(props)=>{\r\n   \r\n    \r\n        \r\n\r\n   return(\r\n    \r\n   <div className ='Searchreviews'>\r\n       \r\n    <p> {props.data[0]}</p>\r\n    \r\n   \r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default SearchReviews;","import React,{useState,useEffect} from 'react'\r\nimport SearchHappy from './SearchHappy'\r\nimport moment from 'moment';\r\nimport SearchReviews from './SearchReviews'\r\n// import {FaRocketchat} from 'react-icons/fa'\r\n// import {FaSearch} from 'react-icons/fa'\r\nimport { Link as RouterLink} from 'react-router-dom';\r\n\r\nconst SearchTopFiveCompanies =(props)=>{\r\n    const[happy,setHappy] = useState([])\r\n    const[text,setText] = useState(false)\r\n    const[message,setMessage] = useState(false)\r\n    const[pros,setPros] = useState(false)\r\n    const[cons,setCons] = useState(false)\r\n    const[output,setOutput] = useState(false)\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n    const[reviews,setReviews] = useState([])\r\n\r\n    useEffect(() => {happyCompanies()},[])\r\n    useEffect(() => {getImage()},[])\r\n\r\n    const happyCompanies = async() =>{\r\n      \r\n        try{\r\n          \r\n            const response = await fetch(`http://127.0.0.1:5000/api/happy/${comp}/${token}`);\r\n            const res = await response.json();\r\n                setHappy(res.happy)\r\n                setReviews(res.reviews)\r\n                \r\n          } catch(error) {\r\n            console.log(error)\r\n          }\r\n          }\r\n\r\n          // const review =() => {\r\n          //     setText(true)\r\n             \r\n          // }\r\n\r\n          // const sendMessage = async(props) =>{\r\n          //   const endpoint = `http://localhost:5000/api/add_review/${token}`;\r\n          //   const data = {\r\n               \r\n          //      review:message,\r\n          //      time_stamp:now,\r\n          //      pros:pros,\r\n          //      cons:cons,\r\n          //   };\r\n          //   const configs = {\r\n          //     method: \"POST\",\r\n          //     mode: \"cors\",\r\n          //     headers: {\"Content-Type\": \"application/json\"},\r\n          //     body: JSON.stringify(data)\r\n          //   }\r\n          //   const response = await fetch(endpoint, configs);\r\n          //   const res = await response.json();\r\n          //   setText(false)\r\n          //   console.log(res)\r\n          //   console.log(JSON.stringify(props))\r\n          // }\r\n\r\n          // let now = moment().format(\"MM/DD/YYYY HH:mm:ss\")\r\n     \r\n          const comp = props.data[1]\r\n    const salary = props.data[0]\r\n    const sal = salary.toLocaleString()\r\n    \r\n \r\n    const numberOfReviews = reviews.map((i)=> {\r\n        return <SearchReviews data= {i} />\r\n      })\r\n      \r\n   \r\n    const happyData = happy.map((i) => {\r\n        return <SearchHappy datas= {i} />\r\n      })\r\n\r\n     const getImage =()=>{\r\n         if(<img src={`//logo.clearbit.com/${props.data[1]}.com `}/>){\r\n            setOutput(true)\r\n         }\r\n         else  {\r\n            setOutput(false)\r\n         }\r\n\r\n     } \r\n\r\n\r\n     const images = <img src={`//logo.clearbit.com/${props.data[1]}.com `  } onError={(e)=>{e.target.onerror = null; e.target.src=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png\" }}width=\"50\" color ='white' />\r\n\r\n    //  <img alt=\"Home renovation company logo Royalty Free Vector Image\" class=\"n3VNCb\" src=\"https://cdn1.vectorstock.com/i/1000x1000/27/75/home-renovation-company-logo-vector-23022775.jpg\" data-noaft=\"1\" jsname=\"HiaYvf\" jsaction=\"load:XAeZkd;\" style=\"width: 322.222px; height: 348px; margin: 0px;\"></img>\r\n     const otherImage = <img src =\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png\"></img>\r\n     console.log(otherImage)\r\n   \r\n     const pos = props.data[2]\r\n   \r\n  const city = props.data[3]\r\n  \r\n  return(\r\n    <div>\r\n      \r\n    <div className ='homeFiveCompanies'>\r\n    \r\n    \r\n      \r\n       <div className = 'homelogo'>\r\n           {/* <object data ={image}>\r\n           {otherImage}\r\n           </object> */}\r\n      \r\n             {output? images:otherImage}\r\n         \r\n      {/* { image.length>0 ?<img src={`//logo.clearbit.com/${props.data[1]}.com `}  />:<img src=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png\"/> } */}\r\n       </div>\r\n     \r\n   <h3> {props.data[1]}</h3> \r\n   <h3> AVG salary:  {'$'+sal+'.00'}</h3> \r\n    \r\n   <h3>{happyData}</h3>\r\n\r\n   < a link href = 'review' as = {RouterLink}> Leave Review</a>\r\n   {/* <button onClick = {e =>review()} > Leave Review</button>  */}\r\n   \r\n   {/* <div className = 'messwrapper'>\r\n       <div class = 'messcard'>  \r\n       \r\n       <div class=\"form-container\"> \r\n \r\n  <label for=\"msg\"><b>Review</b></label>\r\n    <textarea  onChange={e => setMessage(e.target.value)} placeholder=\"Type review..\" name=\"msg\" required></textarea>\r\n    <label for=\"msg\"><b>Pros</b></label>\r\n    <textarea  onChange={e => setPros(e.target.value)} placeholder=\"Type review..\" name=\"msg\" required></textarea>\r\n\r\n    <label for=\"msg\"><b>Cons</b></label>\r\n    <textarea  onChange={e => setCons(e.target.value)} placeholder=\"Type review..\" name=\"msg\" required></textarea>\r\n     <button class='btn'  onClick = {e =>sendMessage()} > Send <FaRocketchat class = 'faChat'/>  </button>\r\n     </div>\r\n   </div>\r\n   </div> */}\r\n \r\n   </div>\r\n   \r\n</div>\r\n\r\n)\r\n}\r\nexport default SearchTopFiveCompanies;\r\n\r\n\r\n{/* <img width=\"640\" height=\"480\" src=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png\" class=\"attachment-thumb_880 size-thumb_880 wp-post-image\" alt=\"\" srcset=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png 880w, http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-300x224.png 300w, http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-1024x768.png 1024w, http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-200x150.png 200w\" sizes=\"(max-width: 640px) 100vw, 640px\"></img> */}","import React from 'react'\r\n\r\nconst SearchTopPositions =(props)=>{\r\n\r\n\r\n    const salary = props.data[0]\r\n    console.log(salary.toLocaleString())\r\n   \r\n\r\n   return(\r\n    \r\n   <div className ='searchfivecity'>\r\n       \r\n    <h5> {props.data[1]}({props.data[2]}) at {props.data[3]} makes an annual salary of {'$'+salary+'.00'}</h5>\r\n    <hr></hr>\r\n    \r\n    \r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default SearchTopPositions;","import React,{useState} from 'react'\r\n\r\n\r\nconst HomeCity =(props) => {\r\n\r\n    return(\r\n      <div className ='homeName'>\r\n      \r\n     <h3> {props.data[0]}</h3> \r\n\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default HomeCity;","import React,{useEffect,useState} from 'react';\r\nimport HomeInfo from './HomeInfo';\r\nimport HomeName from './HomeName';\r\nimport Navbar from './NavBar';\r\nimport SearchMaxCity from './SearchMaxCity'\r\nimport SearchTopFive from './SearchTopFiveCities';\r\nimport SearchTopFiveCompanies from './SearchTopFiveCompanies';\r\nimport SearchTopPositions from './SearchTopFivePositions';\r\nimport HomeCity from './HomeCity';\r\nimport SearchHappyComp from './SearchHappyCompanies'\r\nimport SearchReviews from './SearchReviews';\r\n\r\nconst Home =() => {\r\n\r\n    const[data,setData] = useState([])\r\n    const[name,setName] = useState([])\r\n    const[max,setMax] = useState([])\r\n    // const[five,setFive] = useState([])\r\n    const[companies,setCompanies] = useState([])\r\n  \r\n    const[city,setCity] = useState([])\r\n    const[happyComp,setHappyComp] = useState([])\r\n    const [isError,setIsError] = useState(false)\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n\r\n   \r\n    useEffect(() => {UserInfo()},[])\r\n    useEffect(() => {UserName()},[])\r\n    useEffect(() => {searchData()},[])\r\n    useEffect(() => {fiveCities()},[])\r\n    // useEffect(() => {happyCompanies()},[])\r\n    \r\n  const UserInfo = async() =>{\r\n      \r\n    try{\r\n      \r\n        const response = await fetch(`https://stackedcash.netlify.app/api/personal/${token}`);\r\n        const res = await response.json();\r\n            setData(res.results)\r\n            console.log(res.results)\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n      }\r\n\r\n      const searchData = async() =>{\r\n      \r\n        try{\r\n          setIsError(false)\r\n            const response = await fetch(`https://stackedcash.netlify.app/api/city/${token}`);\r\n            const res = await response.json();\r\n                if(res.output) {\r\n                setMax(res.output)\r\n                }  \r\n                else{\r\n                    setIsError(true)\r\n                }\r\n          } catch(error) {\r\n            console.log(error)\r\n            setIsError(true)\r\n          }\r\n          }\r\n\r\n          const fiveCities = async() =>{\r\n      \r\n            try{\r\n              setIsError(false)\r\n                const response = await fetch(`https://stackedcash.netlify.app/api/top_five_city/${token}`);\r\n                const res = await response.json();\r\n                    if(res.output) {\r\n                    // setFive(res.output)\r\n                    setCompanies(res.results)\r\n                   \r\n                   \r\n                    }  \r\n                    else{\r\n                        setIsError(true)\r\n                    }\r\n              } catch(error) {\r\n                console.log(error)\r\n                setIsError(true)\r\n              }\r\n              }\r\n    \r\n  const UserName = async() =>{\r\n      \r\n    try{\r\n      \r\n        const response = await fetch(`https://stackedcash.netlify.app/api/first_name/${token}`);\r\n        const res = await response.json();\r\n            setName(res.results)\r\n            setCity(res.city)\r\n            console.log(res.results)\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n      }\r\n\r\n    //   const happyCompanies = async() =>{\r\n      \r\n    //     try{\r\n          \r\n    //         const response = await fetch(`http://127.0.0.1:5000/api/top_five_happy_companies/${token}`);\r\n    //         const res = await response.json();\r\n    //             setHappyComp(res.output)\r\n                \r\n    //       } catch(error) {\r\n    //         console.log(error)\r\n    //       }\r\n    //       }\r\n\r\n    //   const output = data.map((i) => {\r\n    //     return <HomeInfo data={i}/> \r\n    //   })\r\n\r\n     const outputName = name.map((i)=> {\r\n       return <HomeName data= {i} />\r\n     })\r\n\r\n     const maxCity = max.map((i)=> {\r\n        return <SearchMaxCity data= {i} />\r\n      })\r\n\r\n    //   const topFive = five.map((i)=> {\r\n    //     return <SearchTopFive data= {i} />\r\n    //   })\r\n\r\n      const topFiveComp = companies.map((i)=> {\r\n        return <SearchTopFiveCompanies data= {i} />\r\n      })\r\n    \r\n      \r\n      const getCity = city.map((i)=> {\r\n        return <HomeCity data= {i} />\r\n      })\r\n\r\n    //   const getHappyComp = happyComp.map((i)=> {\r\n    //     return <SearchHappyComp data= {i} />\r\n    //   })\r\n\r\n     console.log(name)\r\n\r\n    return(\r\n        <div className = 'home'>\r\n            <Navbar/>\r\n           {outputName}\r\n            {/* <div className ='fivecitywrapper'>\r\n            <h3>Top 5 Highest paid Cities</h3>\r\n            {topFive}\r\n            </div> */}\r\n            <div className ='fivecitywrapper'>\r\n            <h3>Top 5 Highest paid Companies in</h3>\r\n             {getCity}\r\n            \r\n            {getCity.length>0 && <hr></hr>}\r\n            {topFiveComp}\r\n            </div>\r\n           \r\n           \r\n\r\n            \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React,{useState} from 'react'\r\n\r\n\r\nconst RegisterName =(props) => {\r\n\r\n    return(\r\n      <div className ='homeName'>\r\n      \r\n      <h3> Hi</h3>\r\n      <h3> { props.data[0]}</h3>\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterName;","import React,{useState,useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport RegisterName from './RegisterName'\r\nconst Question =()=>{\r\n\r\n\r\n    const[department,setDepartment] = useState([])\r\n    const[level,setLevel] = useState([])\r\n    const[years,setYears] = useState([])\r\n    const[happy,setHappy] = useState([])\r\n    const[name,setName] = useState([])\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n\r\n   \r\n    useEffect(() => {UserName()},[])\r\n    \r\n  const history =useHistory()\r\n\r\n\r\n  const sendData = async() => {\r\n\r\n    const endpoint = `http://localhost:5000/api/question/${token}`;\r\n    const data = {\r\n     department:department,\r\n     level:level,\r\n     years:years,\r\n     happy:happy,\r\n    };\r\n    const configs = {\r\n      method: \"POST\",\r\n       mode: \"cors\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(data)\r\n    }\r\n    const response = await fetch(endpoint, configs);\r\n    const res = await response.json();\r\n        history.push ('/login')\r\n}\r\n\r\nconst UserName = async() =>{\r\n      \r\n    try{\r\n      \r\n        const response = await fetch(`http://127.0.0.1:5000/api/first_name/${token}`);\r\n        const res = await response.json();\r\n            setName(res.results)\r\n            console.log(res.results)\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n      }\r\nconst outputName = name.map((i)=> {\r\n    return <RegisterName data= {i} />\r\n  })\r\n\r\nconsole.log(department)\r\n   return(\r\n       <div>\r\n           <div className ='registername'>\r\n           < h5>{outputName}</h5>\r\n           </div>\r\n    <div className = 'questionWrapper'>\r\n        </div>\r\n        \r\n   <div className ='questions'>\r\n   <h3> Before you finishing your registration, please complete the questionaire!</h3>\r\n\r\n    \r\n   <select class=\"select-css\"\r\n    onChange={e => setDepartment(e.target.value)}>\r\n    <option> Select Department</option>\r\n    <option> Finance/Accounting</option>\r\n    <option> Sales/Marketing</option>\r\n    <option> Coporate Development</option>\r\n    <option> Technology</option>\r\n    <option> Customer Support</option>\r\n    <option> Human Resources</option>\r\n    </select> <br/>\r\n   \r\n    <select class=\"select-css\"\r\n    onChange={e => setLevel(e.target.value)}>\r\n        <option> Select Level</option>\r\n    <option> Junior</option>\r\n    <option> Senior</option>\r\n    <option> Manager</option>\r\n    <option> Senior Manager</option>\r\n    <option> Director</option>\r\n    <option> Vice President</option>\r\n    <option> President</option>\r\n    </select> <br/>\r\n    \r\n    \r\n    <select class=\"select-css\"\r\n    onChange={e => setYears(e.target.value)}>\r\n        <option> Select Years Worked</option>\r\n    <option> 1</option>\r\n    <option>2</option>\r\n    <option> 3</option>\r\n    <option> 4</option>\r\n    <option> 5</option>\r\n    <option> 6</option>\r\n    <option> 7</option>\r\n    <option> 8</option>\r\n    <option>9</option>\r\n    <option> 10</option>\r\n    <option> 11</option>\r\n    <option> 12</option>\r\n    </select> <br/>\r\n    \r\n    \r\n    <select class=\"select-css\"\r\n    onChange={e => setHappy(e.target.value)}>\r\n        <option> Happiness</option>\r\n    <option> 1</option>\r\n    <option> 2</option>\r\n    <option> 3</option>\r\n    <option>4</option>\r\n    <option>5</option>\r\n\r\n    </select>\r\n    \r\n\r\n    <button onClick = {e=>sendData()}>  Complete</button> <br/>\r\n\r\n   </div>\r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default Question;","import React , {useState} from 'react';\r\nimport Home from './Home'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Question from './Questions';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const[inputEmail,setInputEmail] = useState('')\r\n    const[inputPassword,setInputPassword] = useState('')\r\n  \r\n    const [isError,setIsError] = useState(false)\r\n    const [token, setToken] = useState(false)\r\n\r\n\r\n\r\n    \r\n    const history =useHistory()\r\n\r\n   const signin = async() =>{\r\n       setIsError(false)\r\n       setToken(\"\")\r\n    const endpoint = \"https://stackedcash.herokuapp.com/api/log\";\r\n    const data = {\r\n      email:inputEmail,\r\n      password:inputPassword,\r\n    };\r\n    const configs = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(data)\r\n    }\r\n    const response = await fetch(endpoint, configs);\r\n    const res = await response.json(); \r\n     console.log(res.token)\r\n     sessionStorage.setItem(\"token\", res.token)\r\n     setToken(res.token)\r\n     setIsError(true)\r\n     if (res.token) {\r\n     history.push ('/home')\r\n   } \r\n}\r\n\r\nreturn(\r\n    <div className='login-split-right'>\r\n<div className = 'loginwrapper'>\r\n        </div>\r\n{token? <Home/> : (\r\n     \r\n     <div className ='login'>\r\n         <h3> Login</h3>\r\n     \r\n         \r\n         {isError && <h5> Incorrect Email or password, please try again</h5>}\r\n         \r\n<label for = 'email'> Email</label> <br/>\r\n    <input type = 'text' id = 'email' placeholder = ' Email ..' onChange={e => setInputEmail(e.target.value)}/> <br/>\r\n\r\n    <label for = 'pass'> Password</label> <br/>\r\n    <input type = 'text' id = 'pass' placeholder = ' Password ..' onChange={e => setInputPassword(e.target.value)}/> <br/>\r\n    <div>\r\n    </div>\r\n    <button onClick = {e=>signin()}>  Login</button> <br/> \r\n\r\n   <img src = \"https://www.romania-insider.com/sites/default/files/styles/article_large_image/public/2020-04/remote_working_laptop_-_photo_pattanaphong_khuankaew_-_dreamstime.com_.jpg\"  />\r\n\r\n    </div> )}\r\n    </div>\r\n)\r\n}\r\nexport default Login;","import React from 'react'\r\n\r\n\r\nconst About =() => {\r\nreturn (\r\n <div>\r\n<h3> Welcome to the about page</h3>\r\n </div>\r\n)\r\n}\r\nexport default About;","import React from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\n\r\n\r\nconst NavbarTwo = () => {\r\n    return (\r\n       \r\n        <div className='landingpage-navbar'>\r\n    \r\n      \r\n    \r\n      <ul>\r\n    <li> <a  href= '/register'as ={RouterLink}> Register </a></li>\r\n    <li> <a  href= '/login'as ={RouterLink}> Login </a></li>\r\n    <li> <a  href= '/about'as ={RouterLink}> About </a></li>\r\n    <li> <a  href= '/contact'as ={RouterLink}> Contact </a></li>\r\n    <li> <a  href= '/booking'as ={RouterLink}> Booking </a></li>\r\n\r\n     </ul>\r\n      \r\n    </div>\r\n    )\r\n    }\r\n    export default NavbarTwo;","import React,{useState,useEffect} from 'react';\r\nimport { Link as RouterLink} from 'react-router-dom';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport LandingText from './LandingPageText';\r\nimport NavbarTwo from './LandingPageNavBar';\r\nimport LandingTests from './LandingTestimonials'\r\n// import {FaMoneyBillAlt,FaWindows,FaPersonBooth} from 'react-icons/fa'\r\n\r\nfunction Landing() {\r\n  \r\n\r\n\r\n\r\n  return (\r\n      <div >\r\n          <NavbarTwo/>\r\n     <div className=\"wrapper\">\r\n       <div className='showcase-container'>\r\n         <div className='showcase-content'>\r\n     <h1> <span className='showcase-h1'> Stacked</span>Cash</h1>\r\n   \r\n     <h3 className='showcase-h3'> Sign up for free to find which companies, positions and cities pay the most</h3>\r\n     <a href= 'about' as ={RouterLink}> Learn More </a>\r\n         </div>\r\n         </div>\r\n     </div>\r\n     < section id=\"landing-info\">\r\n\r\n    <div className='info-img'>\r\n\r\n    </div>\r\n    <div className='info-content'>\r\n    <h2><span className='showcase-h1'>How</span> it works?</h2>\r\n     <h5> Step 1. Register for the app</h5>\r\n     <h5> Step 2. Fill out your personal/company info</h5>\r\n     <h5>Step 3. Search for salary/company info on the app</h5>\r\n    </div>\r\n\r\n    </section> \r\n\r\n    {/* <section className = 'flex-columns'>\r\n     <div className = 'landing-row'>\r\n\r\n     <div  className='landing-column'>\r\n\r\n        <div className ='landing-column-1'>\r\n       <img src = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQkpc8hmSNAAUYxmexlACLLW8SvuFfZeM3x9KqbLr3mc_Emf43p&amp;usqp=CAU\" />\r\n\r\n        </div>\r\n        <div className ='landing-column-2'>\r\n        <h2><span className='showcase-h1'>How</span> it works?</h2>\r\n     <h5> Step 1. Register for the app</h5>\r\n     <h5> Step 2. Fill out your personal/company info</h5>\r\n     <h5>Step 3. Search for salary/company info on the app</h5>\r\n     \r\n        </div>\r\n    </div>\r\n     </div>\r\n    </section> */}\r\n    \r\n    <section id='landing-test'>\r\n     <div className = 'test-content'>\r\n\r\n      <h1> What are customers Say</h1>\r\n\r\n         <div class = 'testimonial'>\r\n        <h2>Keith Brien</h2>\r\n        <img src=\"https://images.pexels.com/photos/614810/pexels-photo-614810.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;w=500\" height='200' />\r\n        <h4>Software Engineer <span className='showcase-h1'>Gemini.</span> </h4>\r\n        <h4>\"StackedCash helped me find the right companies to interview for by helping me negoiate my salary.\"</h4>\r\n        </div>\r\n        <div class = 'testimonial'>\r\n        <h2>Sam Brien</h2>\r\n        <img src=\"https://static01.nyt.com/images/2019/11/17/books/review/17Salam/Salam1-superJumbo.jpg\" height='200' />\r\n        <h4>Senior Manager <span className='showcase-h1'>Kate Spade.</span> </h4>\r\n        <h4>\"StackedCash helped me find which companies to avoid and which to apply to.\"</h4>\r\n        </div>\r\n\r\n     </div>\r\n\r\n    </section>\r\n    \r\n    <section id='features'>\r\n      <div className ='box'>\r\n      {/* <span className='fa'> <FaMoneyBillAlt /></span> */}\r\n         <h3> Salary</h3>\r\n         <h5>Find the right salary you deserve</h5>\r\n      </div>\r\n      <div className ='box box-2'>\r\n     {/* <span className='fa'><FaWindows /></span>  */}\r\n      <h3> Companies</h3>\r\n         <h5>Find good companies to work for</h5>\r\n      </div>\r\n      <div className ='box'>\r\n     {/* <span className='fa'><FaPersonBooth /></span>  */}\r\n      <h3>Positions</h3>\r\n         <h5>Find which positions are paying the highest</h5>\r\n      </div>\r\n\r\n\r\n    </section>\r\n    <div className='footer-bg'>\r\n   <section className='footer'>\r\n    <h4> Copright to StackedCash Inc.</h4>\r\n   </section>\r\n   </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react'\r\n\r\n\r\nconst SearchMaxSal =(props)=>{\r\n   \r\n    const sal = props.data[1]\r\n    const salary = sal.toLocaleString()\r\n        \r\n\r\n   return(\r\n    \r\n   <div className ='SearchTitle'>\r\n       \r\n    <h5> {props.data[2]} is currently located in {props.data[4]} city(s).The highest paid position at {props.data[2]} is {props.data[0]} which makes {'$'+salary+'.00'} located in {props.data[3]}.</h5>\r\n    \r\n   \r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default SearchMaxSal;","import React from 'react'\r\n\r\n\r\nconst HappyText =(props)=>{\r\n\r\n\r\nconst output = props.datas[0]\r\nconsole.log(output)\r\n   const happyFunction =() =>{\r\n       if (output >4.5){\r\n        return 'The average employee reported to be very happy'\r\n       }\r\n       else if (output >=4 && output<4.4){\r\n           return 'The average employee reported to be happy'\r\n       }\r\n       else if (output >=3 && output<4){\r\n        return 'The average employee reported to be moderately happy'\r\n    }\r\n    else if (output >=2 && output <3){\r\n        return 'The average employee reported to be unhappy'\r\n    }\r\n    else{\r\n        return 'The average employee reported to be miserable.'\r\n    }\r\n   }\r\n\r\n   \r\n\r\n   return(\r\n    \r\n   <div className = 'SearchTitle'>\r\n       \r\n \r\n   \r\n    <h5>{happyFunction(output)}</h5>\r\n    \r\n    \r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default HappyText;","import React,{useState} from 'react'\r\n\r\n\r\nconst SearchData =(props) =>{\r\n\r\n    const salary = props.data[1]\r\n    const sal = salary.toLocaleString()\r\n    console.log(salary.toLocaleString())\r\nreturn(\r\n    \r\n     <div className = 'row'>\r\n    <div className='search'>\r\n   \r\n    \r\n    <h1>{props.data[0]}</h1>\r\n    <h2>{'$'+sal+'.00'}</h2>\r\n    <h3>{props.data[3]} <h4>({props.data[2]})</h4></h3>\r\n   \r\n    {/* <h4>{props.data[2]}</h4> */}\r\n\r\n     {/* <div className='searchhr'>\r\n   <hr></hr>\r\n   </div> */}\r\n    </div>\r\n</div>\r\n\r\n    \r\n)\r\n\r\n\r\n}\r\nexport default SearchData;","import React,{} from 'react';\r\n\r\n\r\n\r\nconst CompanyReviews =(props) => {\r\n \r\n    const reviews = props.data[0]\r\n\r\n  return(\r\n <div className ='review-row'>\r\n  <div className = 'totalreviews'>\r\n\r\n\r\n<h5>{props.data[1]}</h5>\r\n<h4>\"{reviews}\"</h4>\r\n<div className ='pros'>\r\n    <h4>Pros:</h4>\r\n<h5>{props.data[2] }</h5>\r\n</div>\r\n<div className ='cons'>\r\n<h4>Cons:</h4>\r\n\r\n<h5>{props.data[3]}</h5>\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n </div>\r\n)\r\n}\r\nexport default CompanyReviews;","import React,{useState} from 'react'\r\nimport Navbar from './NavBar'\r\nimport SearchInfo from './SearchTitle'\r\nimport SearchSalary from './SearchSalary'\r\nimport SearchCity from './SearchCity'\r\nimport SearchMaxSal from './SearchMaxSal'\r\nimport HappyText from './SearchHappyText'\r\nimport SearchDepartment from './SearchDepartment'\r\nimport SearchLevel from './SearchLevel'\r\nimport SearchData from './SearchData'\r\nimport CompanyReviews from './ComanyReviews'\r\nimport Search from './Search'\r\n// import Plot from 'react-plotly.js';\r\n\r\n\r\n\r\nconst SearchTwo =() => {\r\n\r\n    const[inputCompany,setInputCompany] = useState(\"\")\r\n    const[data,setData] = useState([])\r\n    const[happy,setHappy] = useState([])\r\n    const[max,setMax] = useState([])\r\n    const[reviews,setReviews] = useState([])\r\n    const[countReviews,setCountReviews] = useState([])\r\n    const[positions,setPositions] = useState([])\r\n\r\n    // const[department,setDepartment] = useState([])\r\n    // const[level,setLevel] = useState([])\r\n    const[avData,setAverageData] = useState(\"\")\r\n    const [error,setError] = useState(false)\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n\r\n    const searchData = async() =>{\r\n      \r\n        try{\r\n         \r\n            const response = await fetch(`https://stackedcash.netlify.app/api/company/${inputCompany}/${token}`);\r\n            const res = await response.json();\r\n                if(res.output.length>0) {\r\n                setData(res.data)\r\n                setAverageData(res.avg)\r\n                setMax(res.max)\r\n                setError(false)\r\n                setCountReviews(res.review)\r\n                searchHappy()\r\n             \r\n                // getDepartment()\r\n                }  \r\n                else{\r\n                    setError(true)\r\n                    setData([])                }\r\n          } catch(error) {\r\n            console.log(error)\r\n            setError(true)\r\n          }\r\n          }\r\n\r\n          const searchHappy = async() =>{\r\n      \r\n            try{\r\n             \r\n                const response = await fetch(`https://stackedcash.netlify.app/api/happy/${inputCompany}/${token}`);\r\n                const res = await response.json();\r\n                    setHappy(res.happy)\r\n                     console.log(res.happy)\r\n                    \r\n                    \r\n              } catch(error) {\r\n                console.log(error)\r\n              \r\n              }\r\n              }\r\n\r\n              const getReviews = async() =>{\r\n      \r\n                try{\r\n                 \r\n                    const response = await fetch(`https://stackedcash.netlify.app/api/reviews_company/${inputCompany}/${token}`);\r\n                    const res = await response.json();\r\n                        setReviews(res.reviews)\r\n                         console.log(res.happy)\r\n                         setPositions([])\r\n                        \r\n                  } catch(error) {\r\n                    console.log(error)\r\n                  \r\n                  }\r\n                  }\r\n\r\n                  const getPositions = async() =>{\r\n      \r\n                    try{\r\n                     \r\n                        const response = await fetch(`https://stackedcash.netlify.app/api/positions/${inputCompany}/${token}`);\r\n                        const res = await response.json();\r\n                            setPositions(res.positions)\r\n                             setReviews([])\r\n                             \r\n                             \r\n                            \r\n                      } catch(error) {\r\n                        console.log(error)\r\n                      \r\n                      }\r\n                      }\r\n\r\n\r\n            //   const getDepartment = async() =>{\r\n      \r\n            //     try{\r\n                 \r\n            //         const response = await fetch(`http://127.0.0.1:5000/api/get_dep_level/${inputCompany}/${token}`);\r\n            //         const res = await response.json();\r\n            //             setDepartment(res.output)\r\n            //             setLevel(res.output)\r\n            //              console.log(res.happy)\r\n                        \r\n                        \r\n            //       } catch(error) {\r\n            //         console.log(error)\r\n                  \r\n            //       }\r\n            //       }\r\n        \r\n    \r\n          const output = data.map((i) => {\r\n            return <SearchData data = {i} />\r\n          })\r\n        \r\n          const revs = reviews.map((i) => {\r\n            return <CompanyReviews data = {i} />\r\n          })\r\n\r\n          const fivePositions = positions.map((i) => {\r\n            return <SearchData data = {i} />\r\n          })\r\n        //   const salary = data.map((i) => {\r\n        //       return <SearchSalary data={i} />\r\n        //   })\r\n\r\n        //   const city = data.map((i) => {\r\n        //     return <SearchCity data={i} />\r\n        // })\r\n        \r\n        const maxSal = max.map((i) => {\r\n            return <SearchMaxSal data={i} />\r\n        })\r\n        const happyData = happy.map((i) => {\r\n            return <HappyText datas= {i} />\r\n          })\r\n\r\n          const sal = avData.toLocaleString()\r\n\r\n          console.log(maxSal)\r\n\r\n    //       const getDep = department.map((i) => {\r\n    //               return <SearchDepartment data={i}/>\r\n    //       })\r\n\r\n    //       const getLevel = level.map((i) => {\r\n    //         return <SearchLevel data={i}/>\r\n    // })\r\n    const image = <img src={`//logo.clearbit.com/${inputCompany}.com `  } onError={(e)=>{e.target.onerror = null; e.target.src=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png\" }}width=\"100\" color ='white' />\r\n       \r\n        console.log(error)\r\n\r\n    return(\r\n        <div className ='searchcompany'>\r\n      <Navbar/>\r\n    <h2> Please search for a company here</h2>\r\n    <div>{error &&<h4> Company does not exist, please try again!</h4>}</div>\r\n   \r\n    <input type = 'text' id = 'search' placeholder = ' Search' onChange={e => setInputCompany(e.target.value)}/> <br/>\r\n      <button onClick = {e=>searchData()}  > Search</button> <br/>\r\n      \r\n      <div className = 'searchfilterbuttons'>\r\n       {output.length >0 && <h5>{countReviews}</h5>}\r\n       {output.length > 0 && <button onClick = {e=>getReviews()}  > Reviews </button>}\r\n        </div>\r\n        <div className ='positionbutton'>\r\n        {output.length>0 && <h5>{output.length}</h5>}\r\n       {output.length > 0 && <button onClick = {e=>getPositions()}  > Positions </button>}\r\n       </div>\r\n      {output.length >0 &&<div className = 'searchcomp'>\r\n         <h3>{image}</h3>\r\n      {output.length >0 && <h3>{inputCompany}</h3>} \r\n     <div className='averagesalary'>\r\n     {output.length >0 &&<h5> Avg Company Salary: {'$'+sal+'.00'}</h5> }\r\n     </div>\r\n    {/* {output.length >0 &&<p> {happyData}</p>} */}\r\n    {output.length > 0 && <h5>{happyData}</h5>}\r\n      {output.length >0 && maxSal }\r\n      \r\n      </div>}\r\n    \r\n          \r\n        \r\n          \r\n        \r\n\r\n        {/* {output.length>0 &&<Plot\r\n         data={[\r\n           {\r\n           x:output,\r\n             y: salary,\r\n             type: 'scatter',\r\n             mode: 'lines+markers',\r\n             marker: {color: 'lightGreen',backgroundColor:'blue'},\r\n           },\r\n           \r\n         ]}\r\n         layout={ {width: 720,height: 440,title:slice}}\r\n       /> }  */}\r\n    \r\n         {output.length >0 && <hr></hr>}\r\n\r\n      \r\n     {/* {output.length>0 &&<p> {output} <span>{inputCompany}</span></p>}\r\n      \r\n     \r\n      {salary.length >0  &&<h3>Salary</h3>}\r\n      {salary.length >0 && <hr></hr>}\r\n        {salary}\r\n    \r\n       {getDep.length >0 && <h3>Department</h3>}\r\n       {getDep.length >0 && <hr></hr>}\r\n        {getDep}\r\n      \r\n      \r\n       {getLevel.length >0 && <h3>Level</h3>}\r\n       {getLevel.length >0 && <hr></hr>}\r\n        {getLevel}\r\n      \r\n   \r\n       {city.length >0 && <h3>Location</h3>}\r\n       {city.length >0 && <hr></hr>}\r\n        {city}\r\n       */}\r\n     \r\n{/*    \r\n      {revs.length >0 && <div className ='totalreviews'>  */}\r\n      {revs.length >0 &&<h5>{revs}</h5>}\r\n      {/* </div> } */}\r\n       \r\n       {/* {fivePositions.length >0 && <div className ='totalpositions'> */}\r\n      {fivePositions.length >0 && <h5>{output}</h5>}\r\n       {/* </div>} */}\r\n        </div>\r\n    )\r\n}\r\nexport default SearchTwo;","import React,{useEffect,useState} from 'react'\r\nimport SearchTopPositions from './SearchTopFivePositions';\r\nimport Navbar from './NavBar';\r\n\r\nconst SearchPoss =()=>{\r\n   \r\n    const[positions,setPositions] = useState([])\r\n    const[inputPosition,setInputPosition] = useState(\"\")\r\n    const [error,setError] = useState(false)\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n\r\n\r\n    useEffect(() => {getPositions()},[])\r\n    \r\n    const getPositions = async() =>{\r\n      \r\n        try{\r\n          setError(false)\r\n            const response = await fetch(`http://127.0.0.1:5000/api/top_five_city/${token}`);\r\n            const res = await response.json();\r\n                if(res.positions) {\r\n                \r\n                setPositions(res.positions)\r\n                }  \r\n                else{\r\n                    setError(true)\r\n                }\r\n          } catch(error) {\r\n            console.log(error)\r\n            setError(true)\r\n          }\r\n          }\r\n        \r\n          const topFivePositions = positions.map((i)=> {\r\n            return <SearchTopPositions data= {i} />\r\n          })\r\n\r\n          const searchData = async() =>{ \r\n        // try{\r\n         \r\n        //     const response = await fetch(`http://127.0.0.1:5000/api/company/${inputCompany}/${token}`);\r\n        //     const res = await response.json();\r\n        //         if(res.output.length>0) {\r\n        //         setData(res.output)\r\n        //         setAverageData(res.avg)\r\n        //         setMax(res.max)\r\n        //         setError(false)\r\n        //         searchHappy()\r\n        //         getDepartment()\r\n        //         }  \r\n        //         else{\r\n        //             setError(true)\r\n        //         }\r\n        //   } catch(error) {\r\n        //     console.log(error)\r\n        //     setError(true)\r\n        //   }\r\n        \r\n          }\r\n          \r\n\r\n   return(\r\n    \r\n   <div>\r\n <Navbar/>\r\n<h2> Please search for a company here</h2>\r\n    <div>{error &&<h4> Company does not exist, please try again!</h4>}</div>\r\n\r\n    <input type = 'text' id = 'search' placeholder = ' Search' onChange={e => setInputPosition(e.target.value)}/> <br/>\r\n      <button onClick = {e=>searchData()}  > Search</button> <br/>\r\n       \r\n       <div className ='fivecitywrapper'>\r\n            <h3>Top 5 Highest paid Poistions</h3>\r\n            {topFivePositions}\r\n            </div>\r\n   \r\n   </div>\r\n\r\n\r\n)\r\n}\r\nexport default SearchPoss;","import React,{useEffect,useState} from 'react';\r\nimport moment from 'moment';\r\n// import {FaRocketchat} from 'react-icons/fa'\r\nimport Navbar from './NavBar';\r\n\r\nconst AddReview =() => {\r\n\r\n    const[message,setMessage] = useState(false)\r\n    const[pros,setPros] = useState(false)\r\n    const[company,setCompany] = useState(\"\")\r\n    const[cons,setCons] = useState(false)\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n\r\n    const sendMessage = async(props) =>{\r\n        const endpoint = `http://localhost:5000/api/add_review/${token}/${company}`;\r\n        const data = {\r\n           \r\n           review:message,\r\n           time_stamp:now,\r\n           pros:pros,\r\n           cons:cons,\r\n        };\r\n        const configs = {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify(data)\r\n        }\r\n        const response = await fetch(endpoint, configs);\r\n        const res = await response.json();\r\n        \r\n        console.log(res)\r\n        console.log(JSON.stringify(props))\r\n      }\r\n\r\n      let now = moment().format(\"MM/DD/YYYY HH:mm:ss\")\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n    <div className = 'review-flex'>\r\n       \r\n      {/* <div className = 'messwrapper'>\r\n       <div class = 'messcard'>  \r\n       \r\n       <div class=\"form-container\">  */}\r\n\r\n\r\n<div className = 'reviewwrapper'>\r\n  <h2> Add Review Below</h2>\r\n<label for=\"msg\"><b>Comp</b></label>\r\n    <input onChange={e => setCompany(e.target.value)} placeholder=\"Company..\" name=\"msg\" required></input> <br/>\r\n  <label for=\"msg\"><b>Revs</b></label>\r\n    <input onChange={e => setMessage(e.target.value)} placeholder=\"Review..\" name=\"msg\" required></input> <br/>\r\n    <label for=\"msg\"><b>Pros</b></label>\r\n    <input onChange={e => setPros(e.target.value)} placeholder=\"Pros..\" name=\"msg\" required></input><br/>\r\n\r\n    <label for=\"msg\"><b>Cons</b></label>\r\n    <input onChange={e => setCons(e.target.value)} placeholder=\"Cons..\" name=\"msg\" required></input><br/>\r\n     <button class='btn'  onClick = {e =>sendMessage()} > Send  </button>\r\n     </div>\r\n    </div>\r\n    <section className ='review-bottom-image'>\r\n\r\n    </section>\r\n   </div>\r\n\r\n//           </div>\r\n)\r\n}\r\nexport default AddReview;","import React from 'react'\r\n\r\n\r\nconst Contact =() => {\r\nreturn (\r\n <div>\r\n<h3> Welcome to the contact page</h3>\r\n </div>\r\n)\r\n}\r\nexport default Contact;","import React ,{useState} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\n\r\n\r\nconst UserBooking =(props) => {\r\n    const[updateBooking, setUpdateBooking] = useState(false)\r\n    const [bookingError,setBookingError] = useState(false)\r\n    const [startDate, setStartDate] = useState(new Date(),[]);\r\n\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n\r\n    const update =()=>{\r\n        setUpdateBooking(true)\r\n    }\r\n    \r\n    const updateReservation = async() =>{\r\n        const endpoint = `http://localhost:5000/api/update_booking/${token}/${datas}`;\r\n        const data = {\r\n           date_stamp:startDate.toLocaleDateString(),\r\n           time_stamp:startDate.toLocaleTimeString(),\r\n           full_date:startDate,\r\n           pk:datas,\r\n        };\r\n        const configs = {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify(data)\r\n        }\r\n        const response = await fetch(endpoint, configs);\r\n        const res = await response.json();\r\n        console.log()\r\n        setBookingError(true)\r\n       \r\n      }\r\n\r\n\r\n\r\n    const cancel = async(props) =>{\r\n        const endpoint = `http://localhost:5000/api/delete/booking/${token}`;\r\n        const data = {\r\n           pk:datas,\r\n        };\r\n        const configs = {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify(data)\r\n        }\r\n        const response = await fetch(endpoint, configs);\r\n        const res = await response.json();\r\n        \r\n        console.log(res)\r\n        console.log(JSON.stringify(props))\r\n      }\r\n \r\n      const datas = props.data[3]\r\n\r\n   console.log(datas)\r\n\r\n  return(\r\n <div>\r\n     {updateBooking && <DatePicker\r\n \r\n selected={startDate}\r\n onChange={date => setStartDate(date)}\r\n showTimeSelect ={\"vertical\"}\r\n timeFormat=\"p\"\r\n timeIntervals={30}\r\n minDate ={new Date()}\r\n timeCaption=\"Time\"\r\n locale=\"pt-us\"\r\n filterDate={date =>date.getDay()!= 6 && date.getDay() != 0}\r\n     /> }\r\n      {updateBooking &&<button id='reserve-btn' onClick ={e => updateReservation()}> Reserve</button>}\r\n\r\n <h3> Here are your current Bookings {props.data[0]}</h3> <br/>\r\n\r\n <h3>{props.data[1]} <span>{props.data[2]}</span></h3> \r\n <h5>{datas}</h5>\r\n <br/>\r\n <br/>\r\n <button id='cancel-btn' onClick ={e => cancel()}> Cancel</button>\r\n <button id='update-btn' onClick ={e => update()}> Update</button>\r\n\r\n <div className = 'booked'>\r\n    \r\n    {bookingError && <h5> Success, date updated!</h5>}\r\n    </div>\r\n\r\n<hr></hr>\r\n </div>\r\n)\r\n}\r\nexport default UserBooking;","import React,{useEffect,useState} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport UserBooking from './BookingInfo'\r\n\r\n\r\n\r\nconst Booking =() => {\r\n    const [startDate, setStartDate] = useState(\"\")\r\n    const [token, setToken] = useState(sessionStorage.getItem('token'))\r\n    const [booking,setBooking] = useState([])\r\n    const [totalBookings,setTotalBookings] = useState([])\r\n    const [error,setError] = useState(false)\r\n    const[pk,setPk] = useState(\"\")\r\n    const [bookingError,setBookingError] = useState(false)\r\n    const[dateBooked,setDateBooked] =useState(false)\r\n\r\n     useEffect(() => {getBooking()},[])\r\n\r\n\r\n    const reservation = async() =>{\r\n        const endpoint = `http://localhost:5000/api/booking/${token}`;\r\n        const data = {\r\n           date_stamp:startDate.toLocaleDateString(),\r\n           time_stamp:startDate.toLocaleTimeString(),\r\n           full_date:startDate,\r\n           pk:pk,\r\n        };\r\n        const configs = {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify(data)\r\n        }\r\n        const response = await fetch(endpoint, configs);\r\n        const res = await response.json();\r\n        if(totalBookings.includes(startDate)){\r\n            setBookingError(true)\r\n        }\r\n            else {\r\n                console.log(dateBooked)\r\n                setBookingError(true)\r\n            }\r\n      }\r\n\r\n\r\n      const getBooking = async() =>{\r\n      \r\n        try{\r\n         \r\n            const response = await fetch(`http://127.0.0.1:5000/api/get_booking/${token}`);\r\n            const res = await response.json();\r\n                if(res.bookings) {\r\n                    setBooking(res.bookings)\r\n                    setTotalBookings(res.results)\r\n                    setPk(res.pk)\r\n                }\r\n                else {\r\n                    setError(true)\r\n                }\r\n             \r\n          } catch(error) {\r\n            console.log(error)\r\n          \r\n          }\r\n          }\r\n\r\n          const output = booking.map((i) => {\r\n            return <UserBooking data = {i} />\r\n          })\r\n          \r\n          const result = totalBookings.map((i) => {\r\n              return i\r\n          })\r\n           \r\n\r\n          console.log(result)\r\n          \r\n\r\n\r\nreturn (\r\n<div>\r\n<div id = 'calender' ><DatePicker\r\n \r\n         selected={startDate}\r\n         onChange={date => setStartDate(date)}\r\n         showTimeSelect ={\"vertical\"}\r\n         timeFormat=\"p\"\r\n         placeholderText=\"Choose your Time\"\r\n         timeIntervals={30}\r\n         minDate ={new Date()}\r\n         timeCaption=\"Time\"\r\n         locale=\"pt-us\"\r\n         filterDate={date =>date.getDay()!= 6 && date.getDay() != 0  }\r\n         /> \r\n         </div>\r\n\r\n  {/* <input type=\"datetime-local\" onChange={e=> setStartDate(e.target.value)}/>\r\n  <button>Submit</button> */}\r\n<button id='reserve-btn' onClick ={e => reservation()}> Reserve</button>\r\n<div className = 'booked'>\r\n    {error && <h4> No bookings yet</h4>}\r\n    {bookingError && <h5> Success, date booked!</h5>}\r\n    {dateBooked && <h3> Date booked, try again!</h3>}\r\n</div>\r\n<div>\r\n    {output}\r\n</div>\r\n</div>\r\n)\r\n}\r\nexport default Booking","import React,{useState} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Register from './components/Register';\nimport Home from './components/Home';\nimport Login from './components/Login'\nimport About from './components/About'\nimport Landing from './components/LandingPage';\nimport Question from './components/Questions';\nimport SearchTwo from './components/RegisterJob'\nimport SearchPoss from './components/Positions'\nimport AddReview from './components/AddReview';\nimport Contact from './components/Contact'\nimport Booking from './components/Booking'\n\nfunction App() {\n \n\n \n\n\n  return (\n\n    <BrowserRouter>\n    <div className=\"App\">\n\n      <Route exact path = '/' component ={Landing} />\n      <Route exact path = '/home' component ={Home} />\n      <Route exact path = '/login' component ={Login} />\n      <Route exact path = '/companies' component ={SearchTwo} />\n      <Route exaxt path = '/register' component={Register} />\n      <Route exaxt path = '/question' component={Question} />\n      <Route exaxt path = '/positions' component={SearchPoss} />\n      <Route exaxt path = '/review' component={AddReview} />\n      <Route exaxt path = '/about' component={About} />\n      <Route exaxt path = '/contact' component={Contact} />\n      <Route exaxt path = '/booking' component={Booking} />\n    </div>\n    </BrowserRouter>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}